Script hasta el video uno:

var SCRIPT_PROP = PropertiesService.getScriptProperties();

function doPost(e) {
  try {
    Logger.log("Received parameters: " + JSON.stringify(e.parameter));
    
    var op = e.parameter.action;
    
    if(op == "insert") {
      return insert_value(e);
    } else if(op == "update") {
      return update_value(e);
    } else if(op == "delete") {
      return delete_value(e);
    }
    
    return ContentService.createTextOutput(JSON.stringify({
      "status": "Error",
      "message": "Acción Invalida"
    })).setMimeType(ContentService.MimeType.JSON);
    
  } catch (error) {
    Logger.log("Error in doPost: " + error.toString());
    
    return ContentService.createTextOutput(JSON.stringify({
      "status": "Error",
      "message": error.toString()
    })).setMimeType(ContentService.MimeType.JSON);
  }
}

function setup() {
  try {
    // Intenta abrir la hoja de cálculos por su ID
    var spreadsheetId = "REEMPLAZA CON TU ID REAL"; 
    var doc = SpreadsheetApp.openById(spreadsheetId);
    
    // Guardar el ID de la hoja de cálculos en las propiedades del script
    SCRIPT_PROP.setProperty("key", spreadsheetId);
    
    // Verificar que la hoja "Hoja1" existe
    var sheet = doc.getSheetByName('User');
    if (!sheet) {
      throw new Error("La hoja 'User' no existe en esta hoja de cálculos");
    }
    
    Logger.log("Configuración completada exitosamente. ID de hoja guardado: " + spreadsheetId);
  } catch (error) {
    Logger.log("Error en la configuración: " + error.toString());
    throw error;
  }
}

function insert_value(e) {
  try {
    // Verificar que setup() se ha ejecutado previamente
    if (!SCRIPT_PROP.getProperty("key")) {
      throw new Error("Correr configuración() primera funcion del editor de scripts");
    }

    var doc = SpreadsheetApp.openById(SCRIPT_PROP.getProperty("key"));
    var sheet = doc.getSheetByName('User');

    // Validación de parámetros
    var uId = e.parameter.uId;
    var uName = e.parameter.uName;
    var uApellido = e.parameter.uApellido;
    var uPhone = e.parameter.uPhone;
    var uImage = e.parameter.uImage;

    Logger.log("Inserting user - ID: " + uId + ", Name: " + uName + ", Apellido: " + uApellido + ",Phone: " + uPhone + ",Image Length: " + uImage.length);

    if (!uId || !uName ||!uApellido || !uPhone || !uImage) {
      throw new Error("Falta parámetro requerido");
    }

    var dropbox = "USERS IMAGE";
    var folder, folders = DriveApp.getFoldersByName(dropbox);

    if (folders.hasNext()) {
      folder = folders.next();
    } else {
      folder = DriveApp.createFolder(dropbox);
    }

    var fileName = uId + uName + uApellido + uPhone  + "profile_pic.jpg";
    var contentType = "image/jpg";
    var bytes = Utilities.base64Decode(uImage);
    var blob = Utilities.newBlob(bytes, contentType, fileName);
    
    var file = folder.createFile(blob);
    file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
    
    var fileUrl = "https://docs.google.com/spreadsheets/d/" + file.getId() + "/view?usp=drivesdk";

    sheet.appendRow([uId, uName, uApellido, uPhone, fileUrl]);
    
    return ContentService.createTextOutput(JSON.stringify({
      "status": "Éxito",
      "message": "Usuario agregado exitosamente",
      "fileUrl": fileUrl
    })).setMimeType(ContentService.MimeType.JSON);
    
  } catch (error) {
    Logger.log("Error in insert_value: " + error.toString());
    
    return ContentService.createTextOutput(JSON.stringify({
      "status": "Error",
      "message": error.toString()
    })).setMimeType(ContentService.MimeType.JSON);
  }
}

